name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    # This only works with the "matrix" strategy
    #fail-fast: false

    env:
      PYTHONPATH: ${{ github.workspace }}/.scripts
      # ideally there would be a simple way to append / prepend to the path outside of jobs, but no
      PATH: /home/runner/.local/bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/opt/pipx_bin:/usr/share/rust/.cargo/bin:/home/runner/.config/composer/vendor/bin:/home/runner/.dotnet/tools:/snap/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python Environment
      run: |
        pip3 install --upgrade pip
        pip3 install -r .scripts/requirements.txt

    - name: Test Python
      run: |
        # Both problem.py and problem_test.py assume that the 'master' branch is available
        # but GitHub Actions only check out 1 ref (e.g. 'pull/289/merge', a GitHub-managed tag).
        # Here we create the master branch if it does not already exist.
        if [ "$(git branch --list master)" == "" ]; then
            REF="$(git rev-parse HEAD)"
            git fetch origin
            git checkout -b master origin/master
            git checkout ${REF}
        fi
        # problem.py requires 'git config user.name' and 'git config user.email' to work
        git config user.name 'GitHub Actions'
        git config user.email 'actions@github.com'
        pytest .scripts/*_test.py

    - name: Setup C++ CEnvironment
      run: |
        sudo apt install -y cmake gcovr
        sudo sh .scripts/build-and-install-libgtest-libraries.sh

    - name: Build C++
      run: |
        make -j`nproc --all`

    - name: Test C++
      run: |
        make check

    - name: Get C++ Test Coverage
      run: |
        make gcov
        bash <(curl -s https://codecov.io/bash)
